name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build for all platforms
        run: |
          # Windows
          GOOS=windows GOARCH=amd64 go build -o svm_windows_amd64.exe
          zip -r svm_windows_amd64.zip svm_windows_amd64.exe LICENSE README.md
          
          # Windows 32位
          GOOS=windows GOARCH=386 go build -o svm_windows_386.exe
          zip -r svm_windows_386.zip svm_windows_386.exe LICENSE README.md
          
          # macOS Intel
          GOOS=darwin GOARCH=amd64 go build -o svm_darwin_amd64
          zip -r svm_darwin_amd64.zip svm_darwin_amd64 LICENSE README.md
          
          # macOS ARM
          GOOS=darwin GOARCH=arm64 go build -o svm_darwin_arm64
          zip -r svm_darwin_arm64.zip svm_darwin_arm64 LICENSE README.md
          
          # Linux Intel
          GOOS=linux GOARCH=amd64 go build -o svm_linux_amd64
          zip -r svm_linux_amd64.zip svm_linux_amd64 LICENSE README.md
          
          # Linux ARM
          GOOS=linux GOARCH=arm64 go build -o svm_linux_arm64
          zip -r svm_linux_arm64.zip svm_linux_arm64 LICENSE README.md

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            svm_windows_amd64.zip
            svm_windows_386.zip
            svm_darwin_amd64.zip
            svm_darwin_arm64.zip
            svm_linux_amd64.zip
            svm_linux_arm64.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # 如果上述方法不起作用，可以取消下面这行的注释，并确保在仓库中添加了PAT密钥
          # GITHUB_TOKEN: ${{ secrets.PAT }}
